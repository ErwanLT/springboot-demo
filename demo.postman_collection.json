{
	"info": {
		"_postman_id": "9e15d3d9-d813-4018-9436-388826aa94da",
		"name": "Spring Boot Démo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12559449"
	},
	"item": [
		{
			"name": "Security",
			"item": [
				{
					"name": "basic auth",
					"item": [
						{
							"name": "hello",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{basicAuthURL}}/hello",
									"host": [
										"{{basicAuthURL}}"
									],
									"path": [
										"hello"
									]
								}
							},
							"response": []
						},
						{
							"name": "goodbye",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{basicAuthURL}}/goodbye",
									"host": [
										"{{basicAuthURL}}"
									],
									"path": [
										"goodbye"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "admin123",
								"type": "string"
							},
							{
								"key": "username",
								"value": "admin",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "JWT",
					"item": [
						{
							"name": "signup",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"email@test.fr\",\n    \"password\":\"password\",\n    \"fullName\":\"Erwan\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{jwtURL}}/auth/signup",
									"host": [
										"{{jwtURL}}"
									],
									"path": [
										"auth",
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "login",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"email@test.fr\",\n    \"password\":\"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{jwtURL}}/auth/login",
									"host": [
										"{{jwtURL}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "hello",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbWFpbEB0ZXN0LmZyIiwiaWF0IjoxNzM4NzQ3OTg0LCJleHAiOjE3Mzg3NTE1ODR9.hixmDpiocFCceD2CLi4QFFEJA7MhbbZ4m0ZYfzCYXN0",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{jwtURL}}/hello",
									"host": [
										"{{jwtURL}}"
									],
									"path": [
										"hello"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "JWT RBAC",
					"item": [
						{
							"name": "signup",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"email@test.fr\",\n    \"password\":\"password\",\n    \"fullName\":\"Erwan\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{jwtRbacURL}}/auth/signup",
									"host": [
										"{{jwtRbacURL}}"
									],
									"path": [
										"auth",
										"signup"
									]
								}
							},
							"response": []
						},
						{
							"name": "login",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"email@test.fr\",\n    \"password\":\"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{jwtRbacURL}}/auth/login",
									"host": [
										"{{jwtRbacURL}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "login super admin",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"super.admin@email.com\",\n    \"password\":\"123456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{jwtRbacURL}}/auth/login",
									"host": [
										"{{jwtRbacURL}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "me",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJlbWFpbEB0ZXN0LmZyIiwiaWF0IjoxNzM4NzQ4MjgxLCJleHAiOjE3Mzg3NTE4ODF9.hkFteP2TaD8zt2DUgf6HFOxua6_pRa1JhhxYAyxIllM",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{jwtRbacURL}}/users/me",
									"host": [
										"{{jwtRbacURL}}"
									],
									"path": [
										"users",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdXBlci5hZG1pbkBlbWFpbC5jb20iLCJpYXQiOjE3Mzg3NDg1MDEsImV4cCI6MTczODc1MjEwMX0.BuIWzQig6FNmVwdN8h3ZsmJx-31aTu27iLK4DPlOyAk",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{jwtRbacURL}}/users",
									"host": [
										"{{jwtRbacURL}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "<img src=\"https://content.pstmn.io/854e2399-f7da-46cd-91cc-b44649497e31/aW1hZ2UucG5n\" alt=\"\" height=\"870\" width=\"1304\">"
		},
		{
			"name": "Hateoas",
			"item": [
				{
					"name": "author",
					"item": [
						{
							"name": "authors list",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hateoasURL}}/authors",
									"host": [
										"{{hateoasURL}}"
									],
									"path": [
										"authors"
									]
								}
							},
							"response": []
						},
						{
							"name": "author by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hateoasURL}}/authors/1",
									"host": [
										"{{hateoasURL}}"
									],
									"path": [
										"authors",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "article",
					"item": [
						{
							"name": "article by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hateoasURL}}/articles/1",
									"host": [
										"{{hateoasURL}}"
									],
									"path": [
										"articles",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "article list",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{hateoasURL}}/articles",
									"host": [
										"{{hateoasURL}}"
									],
									"path": [
										"articles"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Prometheus",
			"item": [
				{
					"name": "hello",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{prometheusURL}}/hello/Erwan",
							"host": [
								"{{prometheusURL}}"
							],
							"path": [
								"hello",
								"Erwan"
							]
						}
					},
					"response": []
				}
			],
			"description": "Dans le développement d'une application, il ne suffit pas de la construire et de la sécuriser, il est également crucial de surveiller son état de santé en continu.  \nLa surveillance permet de réagir rapidement face à des anomalies ou à des problèmes de performance, assurant ainsi une meilleure stabilité et une réactivité accrue.\n\n**Prometheus** nous permettra de collecter des métriques détaillées sur le comportement de notre API (comme les temps de réponse et la charge système), tandis que **Grafana** nous aidera à les visualiser à travers des tableaux de bord."
		},
		{
			"name": "chaos monkey pour Spring Boot",
			"item": [
				{
					"name": "watchers",
					"item": [
						{
							"name": "watchers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/watchers",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"actuator",
										"chaosmonkey",
										"watchers"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/actuator/chaosmonkey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actuator",
												"chaosmonkey",
												"watchers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"controller\": \"<boolean>\",\n  \"restController\": \"<boolean>\",\n  \"service\": \"<boolean>\",\n  \"repository\": \"<boolean>\",\n  \"component\": \"<boolean>\",\n  \"restTemplate\": \"<boolean>\",\n  \"webClient\": \"<boolean>\",\n  \"actuatorHealth\": \"<boolean>\",\n  \"beans\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								}
							]
						},
						{
							"name": "update watchers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"controller\": \"<boolean>\",\n  \"restController\": \"<boolean>\",\n  \"service\": \"<boolean>\",\n  \"repository\": \"<boolean>\",\n  \"component\": \"<boolean>\",\n  \"restTemplate\": \"<boolean>\",\n  \"webClient\": \"<boolean>\",\n  \"actuatorHealth\": \"<boolean>\",\n  \"beans\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/watchers",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"actuator",
										"chaosmonkey",
										"watchers"
									]
								}
							},
							"response": [
								{
									"name": "update watchers rest controller",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"controller\": false,\n  \"restController\": true,\n  \"service\": false,\n  \"repository\": false,\n  \"component\": false,\n  \"restTemplate\": false,\n  \"webClient\": false,\n  \"actuatorHealth\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/watchers",
											"host": [
												"{{chaosMonkeyURL}}"
											],
											"path": [
												"actuator",
												"chaosmonkey",
												"watchers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain;charset=UTF-8"
										},
										{
											"key": "Content-Length",
											"value": "26"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Feb 2025 14:43:46 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "Watcher config has changed"
								},
								{
									"name": "update watchers all true",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"controller\": false,\n  \"restController\": true,\n  \"service\": true,\n  \"repository\": true,\n  \"component\": false,\n  \"restTemplate\": false,\n  \"webClient\": false,\n  \"actuatorHealth\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/watchers",
											"host": [
												"{{chaosMonkeyURL}}"
											],
											"path": [
												"actuator",
												"chaosmonkey",
												"watchers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain;charset=UTF-8"
										},
										{
											"key": "Content-Length",
											"value": "26"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Feb 2025 14:43:46 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "Watcher config has changed"
								}
							]
						}
					]
				},
				{
					"name": "assaults",
					"item": [
						{
							"name": "assaults",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/assaults",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"actuator",
										"chaosmonkey",
										"assaults"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/actuator/chaosmonkey/assaults",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actuator",
												"chaosmonkey",
												"assaults"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"level\": \"<integer>\",\n  \"deterministic\": \"<boolean>\",\n  \"latencyRangeStart\": \"<integer>\",\n  \"latencyRangeEnd\": \"<integer>\",\n  \"latencyActive\": \"<boolean>\",\n  \"exceptionsActive\": \"<boolean>\",\n  \"exception\": {\n    \"arguments\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"method\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"killApplicationActive\": \"<boolean>\",\n  \"killApplicationCronExpression\": \"<string>\",\n  \"memoryActive\": \"<boolean>\",\n  \"memoryMillisecondsHoldFilledMemory\": \"<integer>\",\n  \"memoryMillisecondsWaitNextIncrease\": \"<integer>\",\n  \"memoryFillIncrementFraction\": \"<double>\",\n  \"memoryFillTargetFraction\": \"<double>\",\n  \"memoryCronExpression\": \"<string>\",\n  \"cpuActive\": \"<boolean>\",\n  \"cpuMillisecondsHoldLoad\": \"<integer>\",\n  \"cpuLoadTargetFraction\": \"<double>\",\n  \"cpuCronExpression\": \"<string>\",\n  \"runtimeAssaultCronExpression\": \"<string>\",\n  \"watchedCustomServices\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								}
							]
						},
						{
							"name": "update assaults",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"level\": \"<integer>\",\n  \"deterministic\": \"<boolean>\",\n  \"latencyRangeStart\": \"<integer>\",\n  \"latencyRangeEnd\": \"<integer>\",\n  \"latencyActive\": \"<boolean>\",\n  \"exceptionsActive\": \"<boolean>\",\n  \"exception\": {\n    \"arguments\": [\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ],\n    \"method\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  \"killApplicationActive\": \"<boolean>\",\n  \"killApplicationCronExpression\": \"<string>\",\n  \"memoryActive\": \"<boolean>\",\n  \"memoryMillisecondsHoldFilledMemory\": \"<integer>\",\n  \"memoryMillisecondsWaitNextIncrease\": \"<integer>\",\n  \"memoryFillIncrementFraction\": \"<double>\",\n  \"memoryFillTargetFraction\": \"<double>\",\n  \"memoryCronExpression\": \"<string>\",\n  \"cpuActive\": \"<boolean>\",\n  \"cpuMillisecondsHoldLoad\": \"<integer>\",\n  \"cpuLoadTargetFraction\": \"<double>\",\n  \"cpuCronExpression\": \"<string>\",\n  \"runtimeAssaultCronExpression\": \"<string>\",\n  \"watchedCustomServices\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/assaults",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"actuator",
										"chaosmonkey",
										"assaults"
									]
								}
							},
							"response": [
								{
									"name": "latency assault",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"level\": 5,\n    \"deterministic\": false,\n    \"latencyRangeStart\": 5000,\n    \"latencyRangeEnd\": 10000,\n    \"latencyActive\": true,\n    \"exceptionsActive\": true,\n    \"exception\": {\n        \"type\": \"java.lang.RuntimeException\",\n        \"method\": \"<init>\",\n        \"arguments\": [\n            {\n                \"type\": \"java.lang.String\",\n                \"value\": \"Chaos Monkey - RuntimeException\"\n            }\n        ]\n    },\n    \"watchedCustomServices\": [\n        \"fr.eletutour.controller.ArticleController\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/assaults",
											"host": [
												"{{chaosMonkeyURL}}"
											],
											"path": [
												"actuator",
												"chaosmonkey",
												"assaults"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain;charset=UTF-8"
										},
										{
											"key": "Content-Length",
											"value": "26"
										},
										{
											"key": "Date",
											"value": "Tue, 11 Feb 2025 12:05:14 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "Assault config has changed"
								}
							]
						},
						{
							"name": "runtime attack",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/assaults/runtime/attack",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"actuator",
										"chaosmonkey",
										"assaults",
										"runtime",
										"attack"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/actuator/chaosmonkey/assaults/runtime/attack",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"actuator",
												"chaosmonkey",
												"assaults",
												"runtime",
												"attack"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "<string>"
								}
							]
						}
					]
				},
				{
					"name": "authors",
					"item": [
						{
							"name": "get Authors",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{chaosMonkeyURL}}/authors",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"authors"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"articles\": [\n      {\n        \"id\": \"<long>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"author\": {\n          \"value\": \"<Circular reference to #/components/schemas/Author detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"author\": {\n          \"value\": \"<Circular reference to #/components/schemas/Author detected>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"articles\": [\n      {\n        \"id\": \"<long>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"author\": {\n          \"value\": \"<Circular reference to #/components/schemas/Author detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"author\": {\n          \"value\": \"<Circular reference to #/components/schemas/Author detected>\"\n        }\n      }\n    ]\n  }\n]"
								}
							]
						},
						{
							"name": "get Author By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{chaosMonkeyURL}}/authors/:id",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"authors",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"articles\": [\n    {\n      \"id\": \"<long>\",\n      \"title\": \"<string>\",\n      \"content\": \"<string>\",\n      \"author\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"bio\": \"<string>\",\n        \"articles\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Article detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Article detected>\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"<long>\",\n      \"title\": \"<string>\",\n      \"content\": \"<string>\",\n      \"author\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"bio\": \"<string>\",\n        \"articles\": [\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Article detected>\"\n          },\n          {\n            \"value\": \"<Circular reference to #/components/schemas/Article detected>\"\n          }\n        ]\n      }\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "articles",
					"item": [
						{
							"name": "get Articles",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{chaosMonkeyURL}}/articles",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"articles"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/articles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<long>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"author\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"bio\": \"<string>\",\n      \"articles\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Article detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Article detected>\"\n        }\n      ]\n    }\n  },\n  {\n    \"id\": \"<long>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"author\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"bio\": \"<string>\",\n      \"articles\": [\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Article detected>\"\n        },\n        {\n          \"value\": \"<Circular reference to #/components/schemas/Article detected>\"\n        }\n      ]\n    }\n  }\n]"
								}
							]
						},
						{
							"name": "get Article By Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{chaosMonkeyURL}}/articles/:id",
									"host": [
										"{{chaosMonkeyURL}}"
									],
									"path": [
										"articles",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/articles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"articles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<long>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"author\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"articles\": [\n      {\n        \"id\": \"<long>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"author\": {\n          \"value\": \"<Circular reference to #/components/schemas/Author detected>\"\n        }\n      },\n      {\n        \"id\": \"<long>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"author\": {\n          \"value\": \"<Circular reference to #/components/schemas/Author detected>\"\n        }\n      }\n    ]\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "actuator",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey",
							"host": [
								"{{chaosMonkeyURL}}"
							],
							"path": [
								"actuator",
								"chaosmonkey"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/actuator/chaosmonkey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actuator",
										"chaosmonkey"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"chaosMonkeyProperties\": {\n    \"enabled\": \"<boolean>\",\n    \"lastEnabledToggleTimestamp\": \"<long>\",\n    \"togglePrefix\": \"<string>\"\n  },\n  \"assaultProperties\": {\n    \"level\": \"<integer>\",\n    \"deterministic\": \"<boolean>\",\n    \"latencyRangeStart\": \"<integer>\",\n    \"latencyRangeEnd\": \"<integer>\",\n    \"latencyActive\": \"<boolean>\",\n    \"exceptionsActive\": \"<boolean>\",\n    \"exception\": {\n      \"arguments\": [\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"type\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ],\n      \"method\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    \"killApplicationActive\": \"<boolean>\",\n    \"killApplicationCronExpression\": \"<string>\",\n    \"memoryActive\": \"<boolean>\",\n    \"memoryMillisecondsHoldFilledMemory\": \"<integer>\",\n    \"memoryMillisecondsWaitNextIncrease\": \"<integer>\",\n    \"memoryFillIncrementFraction\": \"<double>\",\n    \"memoryFillTargetFraction\": \"<double>\",\n    \"memoryCronExpression\": \"<string>\",\n    \"cpuActive\": \"<boolean>\",\n    \"cpuMillisecondsHoldLoad\": \"<integer>\",\n    \"cpuLoadTargetFraction\": \"<double>\",\n    \"cpuCronExpression\": \"<string>\",\n    \"runtimeAssaultCronExpression\": \"<string>\",\n    \"watchedCustomServices\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"watcherProperties\": {\n    \"controller\": \"<boolean>\",\n    \"restController\": \"<boolean>\",\n    \"service\": \"<boolean>\",\n    \"repository\": \"<boolean>\",\n    \"component\": \"<boolean>\",\n    \"restTemplate\": \"<boolean>\",\n    \"webClient\": \"<boolean>\",\n    \"actuatorHealth\": \"<boolean>\",\n    \"beans\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
						}
					]
				},
				{
					"name": "activation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/enable",
							"host": [
								"{{chaosMonkeyURL}}"
							],
							"path": [
								"actuator",
								"chaosmonkey",
								"enable"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/actuator/chaosmonkey/enable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actuator",
										"chaosmonkey",
										"enable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"enabledAt\": \"<dateTime>\",\n  \"disabledAt\": \"<dateTime>\",\n  \"enabledFor\": {\n    \"raw\": {\n      \"seconds\": \"<long>\",\n      \"zero\": \"<boolean>\",\n      \"nano\": \"<integer>\",\n      \"negative\": \"<boolean>\",\n      \"positive\": \"<boolean>\",\n      \"units\": [\n        {\n          \"durationEstimated\": \"<boolean>\",\n          \"timeBased\": \"<boolean>\",\n          \"dateBased\": \"<boolean>\"\n        },\n        {\n          \"durationEstimated\": \"<boolean>\",\n          \"timeBased\": \"<boolean>\",\n          \"dateBased\": \"<boolean>\"\n        }\n      ]\n    },\n    \"formatted\": \"<string>\"\n  },\n  \"enabled\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "desactivation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/disable",
							"host": [
								"{{chaosMonkeyURL}}"
							],
							"path": [
								"actuator",
								"chaosmonkey",
								"disable"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/actuator/chaosmonkey/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actuator",
										"chaosmonkey",
										"disable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"enabledAt\": \"<dateTime>\",\n  \"disabledAt\": \"<dateTime>\",\n  \"enabledFor\": {\n    \"raw\": {\n      \"seconds\": \"<long>\",\n      \"zero\": \"<boolean>\",\n      \"nano\": \"<integer>\",\n      \"negative\": \"<boolean>\",\n      \"positive\": \"<boolean>\",\n      \"units\": [\n        {\n          \"durationEstimated\": \"<boolean>\",\n          \"timeBased\": \"<boolean>\",\n          \"dateBased\": \"<boolean>\"\n        },\n        {\n          \"durationEstimated\": \"<boolean>\",\n          \"timeBased\": \"<boolean>\",\n          \"dateBased\": \"<boolean>\"\n        }\n      ]\n    },\n    \"formatted\": \"<string>\"\n  },\n  \"enabled\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{chaosMonkeyURL}}/actuator/chaosmonkey/status",
							"host": [
								"{{chaosMonkeyURL}}"
							],
							"path": [
								"actuator",
								"chaosmonkey",
								"status"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/actuator/chaosmonkey/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"actuator",
										"chaosmonkey",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"enabledAt\": \"<dateTime>\",\n  \"disabledAt\": \"<dateTime>\",\n  \"enabledFor\": {\n    \"raw\": {\n      \"seconds\": \"<long>\",\n      \"zero\": \"<boolean>\",\n      \"nano\": \"<integer>\",\n      \"negative\": \"<boolean>\",\n      \"positive\": \"<boolean>\",\n      \"units\": [\n        {\n          \"durationEstimated\": \"<boolean>\",\n          \"timeBased\": \"<boolean>\",\n          \"dateBased\": \"<boolean>\"\n        },\n        {\n          \"durationEstimated\": \"<boolean>\",\n          \"timeBased\": \"<boolean>\",\n          \"dateBased\": \"<boolean>\"\n        }\n      ]\n    },\n    \"formatted\": \"<string>\"\n  },\n  \"enabled\": \"<boolean>\"\n}"
						}
					]
				}
			],
			"description": "<img src=\"https://content.pstmn.io/a6740307-ec2d-40ce-8ac8-d27a209f5e73/Y2hhb3NNb25rZXkucG5n\" alt=\"\">\n\n<img src=\"https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExejRzeWtkNGRqNWt1a3o1Ymd6cnU4d3BoZnVwNzg5ZWo1ZTh3aG5qaiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/d31xn6cQIWcOO45G/giphy.gif\" alt=\"Professor%20Chaos\">\n\n### Pourquoi utiliser le chaos engineering ?\n\nLes systèmes modernes sont **distribués, complexes et dynamiques** (microservices, cloud, conteneurs…). Les pannes sont inévitables :  \n✅ **Tester la robustesse** face aux pannes de réseau, surcharges ou erreurs applicatives.  \n✅ **Identifier les points faibles** avant qu’un incident ne survienne en production.  \n✅ **Améliorer la résilience** en optimisant la tolérance aux erreurs et en renforçant l’architecture."
		},
		{
			"name": "client generation",
			"item": [
				{
					"name": "authors",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Récupérer un auteur par ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{clientGenerationURL}}/authors/:id",
											"host": [
												"{{clientGenerationURL}}"
											],
											"path": [
												"authors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) Identifiant de l'auteur à récupérer"
												}
											]
										},
										"description": "Récupère un auteur spécifique en fonction de son identifiant"
									},
									"response": [
										{
											"name": "Auteur trouvé avec succès",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à récupérer"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}"
										},
										{
											"name": "Aucun auteur avec cet ID",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à récupérer"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Erreur lors du traitement",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à récupérer"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										}
									]
								},
								{
									"name": "Mettre à jour un auteur",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{clientGenerationURL}}/authors/:id",
											"host": [
												"{{clientGenerationURL}}"
											],
											"path": [
												"authors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) Identifiant de l'auteur à mettre à jour"
												}
											]
										},
										"description": "Met à jour les informations d'un auteur existant"
									},
									"response": [
										{
											"name": "Auteur mis à jour avec succès",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à mettre à jour"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}"
										},
										{
											"name": "Données de l'auteur invalides",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à mettre à jour"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Aucun auteur avec cet ID",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à mettre à jour"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Erreur lors du traitement",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à mettre à jour"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										}
									]
								},
								{
									"name": "Supprimer un auteur",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{clientGenerationURL}}/authors/:id",
											"host": [
												"{{clientGenerationURL}}"
											],
											"path": [
												"authors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) Identifiant de l'auteur à supprimer"
												}
											]
										},
										"description": "Supprime un auteur en fonction de son identifiant"
									},
									"response": [
										{
											"name": "Auteur supprimé avec succès",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à supprimer"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"\""
										},
										{
											"name": "Aucun auteur avec cet ID",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à supprimer"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										},
										{
											"name": "Erreur lors du traitement",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) Identifiant de l'auteur à supprimer"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Récupérer tous les auteurs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{clientGenerationURL}}/authors",
									"host": [
										"{{clientGenerationURL}}"
									],
									"path": [
										"authors"
									]
								},
								"description": "Récupère la liste complète des auteurs"
							},
							"response": [
								{
									"name": "Liste des auteurs récupérée avec succès",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authors"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"books\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"authorId\": \"<long>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"authorId\": \"<long>\"\n      }\n    ]\n  },\n  {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"bio\": \"<string>\",\n    \"books\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"authorId\": \"<long>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"authorId\": \"<long>\"\n      }\n    ]\n  }\n]"
								},
								{
									"name": "Aucun auteur trouvé",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authors"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"name": "Erreur lors du traitement",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authors"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Créer un nouvel auteur",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"toto\",\n  \"bio\": \"lorem ipsum\",\n  \"books\": [\n    {\n      \"name\": \"test\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{clientGenerationURL}}/authors",
									"host": [
										"{{clientGenerationURL}}"
									],
									"path": [
										"authors"
									]
								},
								"description": "Ajoute un nouvel auteur dans le système"
							},
							"response": [
								{
									"name": "Auteur créé avec succès",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authors"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}"
								},
								{
									"name": "Données de l'auteur invalides",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authors"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								},
								{
									"name": "Erreur lors du traitement",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"bio\": \"<string>\",\n  \"books\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"authorId\": \"<long>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/authors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authors"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"<string>\",\n  \"message\": \"<string>\",\n  \"cause\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "BRMS",
			"item": [
				{
					"name": "drools",
					"item": [
						{
							"name": "api/bank",
							"item": [
								{
									"name": "accounts",
									"item": [
										{
											"name": "create Account",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"balance\": \"<double>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{droolsUrl}}/api/bank/accounts",
													"host": [
														"{{droolsUrl}}"
													],
													"path": [
														"api",
														"bank",
														"accounts"
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"balance\": \"<double>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/bank/accounts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bank",
																"accounts"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"accountNumber\": \"<string>\",\n  \"balance\": \"<double>\"\n}"
												}
											]
										},
										{
											"name": "get Account",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{droolsUrl}}/api/bank/accounts/:accountNumber",
													"host": [
														"{{droolsUrl}}"
													],
													"path": [
														"api",
														"bank",
														"accounts",
														":accountNumber"
													],
													"variable": [
														{
															"key": "accountNumber",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/bank/accounts/:accountNumber",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"bank",
																"accounts",
																":accountNumber"
															],
															"variable": [
																{
																	"key": "accountNumber",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"accountNumber\": \"<string>\",\n  \"balance\": \"<double>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "process Transaction",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"accountNumber\": \"<string>\",\n  \"approved\": \"<boolean>\",\n  \"message\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{droolsUrl}}/api/bank/transactions",
											"host": [
												"{{droolsUrl}}"
											],
											"path": [
												"api",
												"bank",
												"transactions"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"accountNumber\": \"<string>\",\n  \"approved\": \"<boolean>\",\n  \"message\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/bank/transactions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"bank",
														"transactions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"type\": \"<string>\",\n  \"amount\": \"<double>\",\n  \"accountNumber\": \"<string>\",\n  \"approved\": \"<boolean>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "rulebook",
					"item": [
						{
							"name": "api/accounts",
							"item": [
								{
									"name": "create Account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accountNumber\": \"ACC01\",\n  \"ownerName\": \"Erwan\",\n  \"balance\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rulebookUrl}}/api/accounts",
											"host": [
												"{{rulebookUrl}}"
											],
											"path": [
												"api",
												"accounts"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accountNumber\": \"<string>\",\n  \"ownerName\": \"<string>\",\n  \"balance\": \"<number>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/accounts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"accounts"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<string>"
										}
									]
								},
								{
									"name": "process Transaction",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountNumber\": \"ACC01\",\n    \"type\": \"WITHDRAWAL\",\n    \"amount\": 300\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rulebookUrl}}/api/accounts/transaction",
											"host": [
												"{{rulebookUrl}}"
											],
											"path": [
												"api",
												"accounts",
												"transaction"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "prometheusURL",
			"value": "http://localhost:8081",
			"type": "string"
		},
		{
			"key": "basicAuthURL",
			"value": "http://localhost:8083",
			"type": "string"
		},
		{
			"key": "jwtURL",
			"value": "http://localhost:8084",
			"type": "string"
		},
		{
			"key": "jwtRbacURL",
			"value": "http://localhost:8085",
			"type": "string"
		},
		{
			"key": "hateoasURL",
			"value": "http://localhost:8086",
			"type": "string"
		},
		{
			"key": "chaosMonkeyURL",
			"value": "http://localhost:8089",
			"type": "default"
		},
		{
			"key": "clientGenerationURL",
			"value": "http://localhost:8091",
			"type": "string"
		},
		{
			"key": "droolsUrl",
			"value": "http://localhost:8094",
			"type": "string"
		},
		{
			"key": "rulebookUrl",
			"value": "http://localhost:8095",
			"type": "string"
		}
	]
}